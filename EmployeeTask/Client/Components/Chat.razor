@page "/chat"
@inject HttpClient _httpClient;
@inject ApiAuthenticationStateProvider _authenticationStateProvider;
@layout MainLayout
<main class="content">
    <div class="container p-0">
        <h1 class="h3 mb-3">Messages</h1>
        <div class="card">
            <div class="row g-0">
                <div class="col-12 col-lg-5 col-xl-3 border-right pl-7">
                    <div class="px-4 d-none d-md-block">
                        <div class="d-flex align-items-center">
                            <div class="flex-grow-1">
                                <MudTextField Class="form-control my-3" @bind-Value="SearchText" InputType="InputType.Text" Placeholder="Search..."></MudTextField>
                            </div>
                        </div>
                    </div>
                    @foreach (var x in applicationUsers)
                    {
                        <div class="badge bg-success float-right">5</div>
                        <div class="d-flex align-items-start" @onclick="()=>OnUserClick(x)">
                            <img src="https://bootdey.com/img/Content/avatar/avatar5.png" class="rounded-circle mr-1" alt="Vanessa Tucker" width="40" height="40">
                            <div class="flex-grow-1 ml-3">
                                <MudText>@x.UserName</MudText>
                                    <div class="small">
                                        <span class="fas fa-circle chat-online"></span><MudText>Online</MudText>
                                    </div>
                                </div>
                            </div>
                    }
                    <hr class="d-block d-lg-none mt-1 mb-0">
                </div>
                <div class="col-12 col-lg-7 col-xl-9">
                    @if (SelectedUser != null)
                    {
                        <div class="py-2 px-4 border-bottom d-none d-lg-block">
                            <div class="d-flex align-items-center py-1">
                                <div class="position-relative">
                                    <MudImage Src="https://bootdey.com/img/Content/avatar/avatar3.png" Class="rounded-circle mr-1" Alt="Sharon Lessman" Width="40" Height="40" />
                                </div>
                                <div class="flex-grow-1 pl-3">
                                    <MudText><strong>@SelectedUser.UserName</strong></MudText>
                                    <div class="text-muted small"><MudText><em>Typing...</em></MudText></div>
                                </div>
                                <div>
                                    <MudButton Class="btn btn-primary btn-lg mr-1 px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-phone feather-lg"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path></svg></MudButton>
                                    <MudButton Class="btn btn-info btn-lg mr-1 px-3 d-none d-md-inline-block"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video feather-lg"><polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect></svg></MudButton>
                                    <MudButton Class="btn btn-light border btn-lg px-3"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-horizontal feather-lg"><circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle></svg></MudButton>
                                </div>
                            </div>
                        </div>
                        <div class="position-relative">
                            <div class="chat-messages p-4">
                                @if (UserMessagesModels != null && UserMessagesModels.Any())
                                {
                                    @foreach (var userMessage in UserMessagesModels)
                                    {
                                        foreach (var message in userMessage.Messages)
                                        {
                                            @if (userMessage.UserName == Email)
                                            {
                                                <div class="chat-message-right pb-4">
                                                    <div>
                                                        <MudImage Src="https://bootdey.com/img/Content/avatar/avatar1.png" Class="rounded-circle mr-1" Alt="Chris Wood" Width="40" Height="40" />
                                                        <div class="text-muted small text-nowrap mt-2">@DateTime.Now</div>
                                                    </div>
                                                    <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                                        <div class="font-weight-bold mb-1">You</div>
                                                        <MudText>@message</MudText>
                                                        </div>
                                                    </div>
                                            }
                                            else
                                            {
                                                <div class="chat-message-left pb-4">
                                                    <div>
                                                        <MudImage Src="https://bootdey.com/img/Content/avatar/avatar3.png" Class="rounded-circle mr-1" Alt="Sharon Lessman" Width="40" Height="40" />
                                                        <div class="text-muted small text-nowrap mt-2">@DateTime.Now</div>
                                                    </div>
                                                    <div class="flex-shrink-1 bg-light rounded py-2 px-3 ml-3">
                                                        <div class="font-weight-bold mb-1">Sharon Lessman</div>
                                                        <MudText>Sit meis deleniti eu, pri vidit meliore docendi ut, an eum erat animal commodo.</MudText>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                }
                            </div>
                        </div>
                        <div class="flex-grow-0 py-3 px-4 border-top">
                            <div class="input-group">
                                <MudTextField Class="form-control" @bind-Value="Text" InputType="InputType.Text" Placeholder="Type your message"></MudTextField>
                                <MudButton Class="btn btn-primary" OnClick="SendMessage">Send</MudButton>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>
@code {
    public class UserMessagesModel
    {
        public string UserName { get; set; }
        public List<string> Messages { get; set; } = new();
    }
    [CascadingParameter]
    public HubConnection HubConnection { get; set; }
    public string SearchText { get; set; }
    public List<ApplicationUser> applicationUsers { get; set; } = new();
    public static List<UserMessagesModel> UserMessagesModels { get; set; } = new();
    public ApplicationUser SelectedUser { get; set; } = new();
    public string Text { get; set; }
    public string Email { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var user = await _authenticationStateProvider.GetAuthenticationStateAsync();
        Email = user.User?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value!;
        var result = await _httpClient.GetFromJsonAsync<List<ApplicationUser>>($"{ApplicationRoutes.Url}Employee/GetUsers");
        applicationUsers = result ?? new List<ApplicationUser>();
        HubConnection.On<List<string>, string>("RecieveMessage", (message, user) =>
        {
            UserMessagesModels.Add(new UserMessagesModel { UserName = user, Messages = message });
            StateHasChanged();
        });
    }
    public void OnUserClick(ApplicationUser user)
    {
        SelectedUser = user;
    }
    public async Task SendMessage()
    {
        UserMessagesModels.Add(new UserMessagesModel{UserName=Email, Messages=new List<string>{Text}});
        await HubConnection.SendAsync("SendMessage", Text, SelectedUser.Email);
        Text = string.Empty;
    }
}
